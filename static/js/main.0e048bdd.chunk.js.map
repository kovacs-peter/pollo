{"version":3,"sources":["redux/userSlice.js","components/layout/header.jsx","components/layout/main-container.jsx","redux/infoSlice.js","components/layout/info-bar.jsx","components/layout/layout.jsx","api/firebase.js","components/misc/loader.jsx","components/login.jsx","components/poll-config/link-page.jsx","components/poll-config/option.jsx","hooks/useCreatePoll.js","hooks/useValidation.js","components/poll-config/poll-config.jsx","hooks/usePolls.js","components/poll-list/poll-list.jsx","hooks/useUpdatePoll.js","hooks/usePoll.js","components/poll-display/poll-password.jsx","components/poll-display/option-radio.jsx","components/poll-display/poll-fill.jsx","components/misc/user-photo.jsx","components/poll-results/percentage-display.jsx","components/poll-results/poll-results.jsx","components/misc/not-found.jsx","components/routes.jsx","App.js","reportWebVitals.js","redux/store.js","index.js","components/misc/loader.module.scss","components/poll-display/style/poll-fill.module.scss","components/layout/style/header.module.scss","components/poll-results/style/poll-result.module.scss","components/poll-list/style/poll-list.module.scss","components/layout/style/main-container.module.scss","components/poll-config/style/poll-config.module.scss","components/misc/user-photo.module.scss","components/poll-display/style/poll-password.module.scss"],"names":["userSlice","createSlice","name","initialState","userData","reducers","setUser","state","action","payload","actions","HEADER_ITEMS","title","path","Header","className","styles","headerContainer","logo","to","headerItems","map","item","link","MainContainer","children","centerChildren","mainContent","infoType","infoText","infoSlice","setInfo","resetInfo","InfoBar","text","type","loggedIn","dispatch","useDispatch","closeBar","useEffect","window","setTimeout","style","cursor","backgroundColor","top","infoBar","onClick","close","Layout","user","useSelector","info","height","display","justifyContent","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","initializeApp","auth","getAuth","firestore","getFirestore","Loader","small","smallContainer","container","smallCircle","circle","provider","GoogleAuthProvider","Login","useState","loading","setLoading","history","useHistory","search","useLocation","push","split","getRedirectResult","then","result","json","JSON","stringify","parse","localStorage","getItem","setItem","setDoc","doc","uid","FullName","displayName","photoURL","catch","error","console","message","finally","flexDirection","signInWithRedirect","marginTop","alignSelf","id","event","target","checked","htmlFor","LinkPage","clicked","setClicked","plloUrl","location","host","textAlign","navigator","clipboard","writeText","Option","onInput","value","handleRemove","noRemove","count","placeholder","aria-label","submitPoll","params","a","apiParams","createdById","userId","answeredBy","addDoc","collection","validatePresence","length","useValidate","validate","dataArray","invalids","forEach","data","Array","isArray","key","some","val","required","join","PollConfig","questionRef","useRef","passNeeded","setPassNeeded","passRef","option0","answers","setAnswers","pollId","setPollId","client","useQueryClient","useMutation","retry","onSuccess","invalidateQueries","useCreatePoll","createPoll","mutate","isLoading","isSuccess","lakat","oldState","form","ref","Object","keys","answerKey","modifyObject","stopPropagation","num","option","disabled","options","values","current","optionsObject","chosenBy","password","question","usePolls","userUid","useQuery","q","query","where","getDocs","res","docs","fetchPollsFor","refetchOnWindowFocus","enabled","PollList","pollList","flex","poll","listItem","divider","buttonAlign","updatePoll","pollUid","selectedOption","userDoc","pollDoc","arrayUnion","updateDoc","merge","usePoll","getDoc","fetchPoll","refetchInterval","PollPassword","passInput","input","OptionRadio","onCheck","optionContainer","activeCheckbox","optionCheckbox","optionText","PollFill","passCorrect","setPassCorrect","setSelectedOption","useParams","pollLoading","useUpdatePoll","mutationRunning","handleAnswer","noAns","ans","includes","alreadyAnswered","optionsContainer","sort","noAnswer","FACES","UserPhoto","setUserData","index","setIndex","Math","floor","random","photo","src","alt","referrerpolicy","PercentageDisplay","allAnswerCount","percentage","percentageContainer","percentageBackground","width","PollResult","allAnswers","setAllAnswers","flat","NotFound","Routes","pathname","userJSON","exact","strict","component","PollResults","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","UserReducer","InfoReducer","QueryClient","ReactDOM","render","StrictMode","reduxStore","initialIsOpen","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e048bdd.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { userData: null };\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {\n        setUser: (state, action) => {\n            state.userData = action.payload;\n        },\n    },\n});\n\nexport const { setUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import styles from \"./style/header.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst HEADER_ITEMS = [\n    { title: \"CREATE POLL\", path: \"/new\" },\n    { title: \"MY POLLS\", path: \"/\" },\n];\nconst Header = () => {\n    return (\n        <header className={styles.headerContainer}>\n            <div>\n                <Link className={styles.logo} to=\"/\">\n                    🐓 POLLO\n                </Link>\n            </div>\n            <div className={styles.headerItems}>\n                {HEADER_ITEMS.map((item) => (\n                    <Link key={item.path} to={item.path} className={styles.link}>\n                        {item.title}\n                    </Link>\n                ))}\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import styles from \"./style/main-container.module.scss\";\n\nconst MainContainer = ({ children }) => {\n    return (\n        <div className={styles.centerChildren}>\n            <main className={styles.mainContent}>{children}</main>\n        </div>\n    );\n};\n\nexport default MainContainer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = { infoType: \"info\", infoText: \"\" };\n\nexport const infoSlice = createSlice({\n    name: \"info\",\n    initialState,\n    reducers: {\n        setInfo: (state, action) => {\n            state.infoType = action.payload.infoType;\n            state.infoText = action.payload.infoText;\n        },\n        resetInfo: (state) => initialState,\n    },\n});\n\nexport const { setInfo, resetInfo } = infoSlice.actions;\n\nexport default infoSlice.reducer;\n","import { useEffect } from \"react\";\nimport styles from \"./style/header.module.scss\";\nimport { resetInfo } from \"../../redux/infoSlice\";\nimport { useDispatch } from \"react-redux\";\n\nconst InfoBar = ({ text, type, loggedIn }) => {\n    const dispatch = useDispatch();\n    const closeBar = () => {\n        dispatch(resetInfo());\n    };\n    useEffect(() => {\n        window.setTimeout(() => {\n            closeBar();\n        }, 30000);\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div\n            style={{\n                cursor: \"pointer\",\n                backgroundColor: type === \"info\" ? \"#00aa09\" : \"#e93030\",\n                top: loggedIn ? \"3rem\" : \"0px\",\n            }}\n            className={styles.infoBar}\n            onClick={closeBar}\n        >\n            <div></div>\n            <div>{text}</div>\n            <div className={styles.close} onClick={closeBar}>\n                x\n            </div>\n        </div>\n    );\n};\n\nexport default InfoBar;\n","import Header from \"./header\";\nimport MainContainer from \"./main-container\";\nimport InfoBar from \"./info-bar\";\nimport { useSelector } from \"react-redux\";\nconst Layout = ({ children, user }) => {\n    const { infoType, infoText } = useSelector((state) => state.info);\n    return (\n        <div style={{ height: \"100%\" }}>\n            {infoText && <InfoBar loggedIn={!!user} type={infoType} text={infoText} />}\n            {user ? (\n                <>\n                    <Header />\n                    <MainContainer>{children}</MainContainer>\n                </>\n            ) : (\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <MainContainer>{children}</MainContainer>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Layout;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const auth = getAuth();\n\nexport const firestore = getFirestore();\n","import styles from \"./loader.module.scss\";\n\nconst Loader = ({ small }) => {\n    return (\n        <div className={small ? styles.smallContainer : styles.container}>\n            <span className={small ? styles.smallCircle : styles.circle}></span>\n            <span className={small ? styles.smallCircle : styles.circle}></span>\n            <span className={small ? styles.smallCircle : styles.circle}></span>\n            <span className={small ? styles.smallCircle : styles.circle}></span>\n        </div>\n    );\n};\n\nexport default Loader;\n","import { useEffect, useState } from \"react\";\nimport { auth } from \"../api/firebase\";\nimport { GoogleAuthProvider, signInWithRedirect, getRedirectResult } from \"firebase/auth\";\nimport { setUser } from \"../redux/userSlice\";\nimport { useHistory } from \"react-router\";\nimport { setDoc, doc } from \"firebase/firestore\";\nimport { firestore } from \"../api/firebase\";\nimport { useLocation } from \"react-router-dom\";\nimport Loader from \"./misc/loader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setInfo } from \"../redux/infoSlice\";\n\nconst provider = new GoogleAuthProvider(auth);\n\nconst Login = () => {\n    const [loading, setLoading] = useState(true);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { search } = useLocation();\n    const user = useSelector((state) => state.user.userData);\n\n    const handleToggle = (event) => {\n        localStorage.setItem(\"persistentLogin\", event.target.checked);\n    };\n\n    useEffect(() => {\n        //setLoading(true);\n        if (user?.userData) history.push(search.split(\"/\"));\n        getRedirectResult(auth)\n            .then((result) => {\n                if (!result?.user) {\n                    setLoading(false);\n                    return;\n                }\n\n                const json = JSON.stringify(result.user);\n                dispatch(setUser(JSON.parse(json)));\n\n                if (localStorage.getItem(\"persistentLogin\") === \"true\")\n                    localStorage.setItem(\"user\", json);\n\n                setDoc(doc(firestore, \"users\", result.user.uid), {\n                    uid: result.user.uid,\n                    FullName: result.user.displayName,\n                    photoURL: result.user.photoURL,\n                }).then(() => {\n                    dispatch(setInfo({ infoText: \"Successful login\", infoType: \"info\" }));\n                    history.push(search.split(\"from=\")[1] || \"/\");\n                });\n            })\n            .catch((error) => {\n                dispatch(setInfo({ infoType: \"error\", infoText: \"Unsuccessful login\" }));\n                console.error(error.message);\n            })\n            .finally(() => setLoading(false));\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div className=\"content center\">\n            {loading ? (\n                <Loader />\n            ) : (\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <button\n                        className={\"button submit login\"}\n                        onClick={() => signInWithRedirect(auth, provider)}\n                    >\n                        Login with google\n                    </button>\n                    <div\n                        style={{\n                            marginTop: \"1rem\",\n                            alignSelf: \"center\",\n                        }}\n                    >\n                        <input\n                            style={{ cursor: \"pointer\" }}\n                            id=\"check\"\n                            onClick={handleToggle}\n                            type=\"checkbox\"\n                        />\n                        <label style={{ cursor: \"pointer\" }} htmlFor=\"check\">\n                            {\" \"}\n                            stay logged in\n                        </label>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst LinkPage = ({ id }) => {\n    const [clicked, setClicked] = useState(false);\n    const plloUrl = `${window.location.host}/${id}`;\n    const handleClick = () => {\n        navigator.clipboard.writeText(plloUrl);\n        setClicked(true);\n    };\n    return (\n        <div className=\"content\" style={{ justifyContent: \"space-between\" }}>\n            <h1 style={{ textAlign: \"center\" }}>\n                🐓🐓🐓 Your Pollo is available! 🐓🐓🐓\n            </h1>\n            <div style={{ textAlign: \"center\" }}>\n                <small>You can access the poll here:</small>\n                <br />\n                <div>\n                    <Link style={{ cursor: \"pointer\" }} to={`/${id}`}>\n                        {plloUrl}\n                    </Link>\n                </div>\n                <br />\n                <button className=\"button submit\" onClick={handleClick}>\n                    {clicked ? \"Copied!\" : \"Copy to Clipborad\"}\n                </button>\n            </div>\n            <div></div>\n        </div>\n    );\n};\n\nexport default LinkPage;\n","const Option = ({ onInput, value, name, handleRemove, noRemove, count }) => {\n    return (\n        <div style={{ height: \"5rem\" }}>\n            <input\n                placeholder={count === 1 ? \"42\" : \"\"}\n                className=\"formInput\"\n                type=\"text\"\n                name={name}\n                value={value}\n                onInput={onInput}\n            />\n            {!noRemove && (\n                <button\n                    aria-label=\"Add another option\"\n                    onClick={handleRemove}\n                    className=\"button remove\"\n                >\n                    ×\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default Option;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { addDoc, collection } from \"firebase/firestore\";\nimport { firestore } from \"../api/firebase\";\n\nconst submitPoll = async (params) => {\n    const apiParams = {\n        ...params,\n        createdById: params.userId,\n        answeredBy: [],\n    };\n    const result = await addDoc(collection(firestore, \"polls\"), apiParams);\n    return result;\n};\n\nexport const useCreatePoll = () => {\n    const client = useQueryClient();\n\n    return useMutation((data) => submitPoll(data), {\n        retry: false,\n        onSuccess: () => {\n            client.invalidateQueries(\"polls\");\n        },\n    });\n};\n","import { useDispatch } from \"react-redux\";\nimport { setInfo } from \"../redux/infoSlice\";\n\nconst validatePresence = (value) => !!value.length;\n\nconst useValidate = () => {\n    const dispatch = useDispatch();\n    const validate = (dataArray) => {\n        let invalids = [];\n        dataArray.forEach((data) => {\n            if (Array.isArray(data.value)) {\n                if (data.value.length < 2)\n                    invalids.push(`At least 2 ${data.key} required`);\n                if (data.value.some((val) => !validatePresence(val)))\n                    invalids.push(`Fill out all ${data.key}!`);\n            } else {\n                if (data.required) {\n                    if (!validatePresence(data.value))\n                        invalids.push(`Fill out ${data.key}!`);\n                }\n            }\n        });\n        if (invalids.length)\n            dispatch(setInfo({ infoType: \"error\", infoText: invalids.join(\" | \") }));\n        return !invalids.length;\n    };\n\n    return { validate };\n};\n\nexport default useValidate;\n","import { useState, useEffect, useRef } from \"react\";\nimport styles from \"./style/poll-config.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport LinkPage from \"./link-page\";\nimport Option from \"./option\";\nimport { useCreatePoll } from \"../../hooks/useCreatePoll\";\nimport Loader from \"../misc/loader\";\nimport useValidate from \"../../hooks/useValidation\";\n\nconst PollConfig = () => {\n    const user = useSelector((state) => state.user.userData);\n    const { validate } = useValidate();\n    const questionRef = useRef(\"\");\n    const [passNeeded, setPassNeeded] = useState(false);\n    const passRef = useRef();\n    const [answers, setAnswers] = useState({ option0: \"\" });\n    const [pollId, setPollId] = useState(null);\n    const { mutate: createPoll, isLoading, isSuccess, data } = useCreatePoll();\n\n    useEffect(() => {\n        if (isSuccess) {\n            setPollId(data.id);\n        }\n    }, [isSuccess, data]);\n\n    const handleAdd = (event) => {\n        event.stopPropagation();\n\n        const num = Object.keys(answers).length;\n        const option = `option${num}`;\n        setAnswers({ ...answers, [option]: \"\" });\n    };\n\n    const handleRemove = (key) => {\n        let modifyObject = { ...answers };\n        delete modifyObject[key];\n        setAnswers(modifyObject);\n    };\n\n    const handleSubmit = () => {\n        const options = Object.values(answers);\n        const valid = validate([\n            {\n                key: \"question\",\n                value: questionRef?.current?.value,\n                required: true,\n            },\n            {\n                key: \"password\",\n                value: passRef?.current?.value,\n                required: passNeeded,\n            },\n            {\n                key: \"answer options\",\n                value: options,\n                required: true,\n            },\n        ]);\n        if (!valid) return;\n\n        const optionsObject = {};\n        options.forEach(\n            (option) =>\n                (optionsObject[option] = {\n                    chosenBy: [],\n                })\n        );\n\n        const params = {\n            options: optionsObject,\n            password: passRef?.current?.value || null,\n            question: questionRef?.current?.value || null,\n            userId: user.uid,\n        };\n        createPoll(params);\n    };\n\n    if (pollId) return <LinkPage id={pollId} />;\n    return (\n        <div className=\"content\">\n            <h1 className=\"header-text\">\n                Create a poll\n                <span\n                    className={styles.lakat}\n                    aria-label=\"Protect the poll with a password\"\n                    onClick={() => {\n                        setPassNeeded((oldState) => !oldState);\n                    }}\n                >\n                    {passNeeded ? \"🔒\" : \"🔓\"}\n                </span>\n            </h1>\n            <div className={styles.form}>\n                <label>\n                    Question:\n                    <input\n                        className=\"formInput\"\n                        type=\"text\"\n                        name=\"question\"\n                        placeholder=\"What is the meaing of life?\"\n                        ref={questionRef}\n                    />\n                </label>\n                {passNeeded && (\n                    <label>\n                        Password:\n                        <input\n                            className=\"formInput\"\n                            type=\"text\"\n                            name=\"pollPassword\"\n                            ref={passRef}\n                        />\n                    </label>\n                )}\n                <div>\n                    <label>\n                        Options to select:\n                        {Object.keys(answers).map((answerKey) => (\n                            <Option\n                                noRemove={Object.keys(answers).length === 1}\n                                count={Object.keys(answers).length}\n                                key={answerKey}\n                                name={answerKey}\n                                value={answers[answerKey]}\n                                onInput={(event) =>\n                                    setAnswers({\n                                        ...answers,\n                                        [answerKey]: event.target.value,\n                                    })\n                                }\n                                handleRemove={() => handleRemove(answerKey)}\n                            />\n                        ))}\n                    </label>\n                    <button onClick={handleAdd} className=\"button add\">\n                        +\n                    </button>\n                </div>\n            </div>\n            <button disabled={isLoading} onClick={handleSubmit} className=\"button submit\">\n                {isLoading ? <Loader small /> : \"SUMBIT POLL\"}\n            </button>\n        </div>\n    );\n};\n\nexport default PollConfig;\n","import { useQuery } from \"react-query\";\nimport { query, collection, where, getDocs } from \"firebase/firestore\";\nimport { firestore } from \"../api/firebase\";\n\nconst fetchPollsFor = (userUid) => async () => {\n    const q = query(collection(firestore, \"polls\"), where(\"createdById\", \"==\", userUid));\n\n    const res = await getDocs(q);\n    let docs = [];\n    res.forEach((doc) => {\n        docs.push({ ...doc.data(), uid: doc.id });\n    });\n    return docs;\n};\nexport const usePolls = (userUid) => {\n    return useQuery(\"polls\", fetchPollsFor(userUid), {\n        retry: false,\n        refetchOnWindowFocus: true,\n        enabled: !!userUid,\n    });\n};\n","import style from \"./style/poll-list.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { usePolls } from \"../../hooks/usePolls\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../misc/loader\";\nconst PollList = () => {\n    const user = useSelector((state) => state.user.userData);\n\n    const userUid = user?.uid;\n    const { data: pollList, isLoading } = usePolls(userUid);\n    if (isLoading || !user)\n        return (\n            <div className=\"content center\">\n                <Loader />\n            </div>\n        );\n    return (\n        <div className=\"content\">\n            <h1 className=\"header-text\">My polls</h1>\n            <div className={style.flex}>\n                {pollList &&\n                    pollList.map((poll) => (\n                        <div key={poll.uid} className={style.listItem}>\n                            <div>{poll.question}</div>\n                            <div className={style.divider}></div>\n                            <Link className={style.link} to={\"/\" + poll.uid}>\n                                {window.location.host}/{poll.uid}\n                            </Link>\n                        </div>\n                    ))}\n            </div>\n            <Link className={style.buttonAlign} to=\"/new\">\n                <button className=\"button submit\">CREATE A POLL</button>\n            </Link>\n        </div>\n    );\n};\n\nexport default PollList;\n","import { useMutation, useQueryClient } from \"react-query\";\nimport { doc, updateDoc, arrayUnion } from \"firebase/firestore\";\nimport { firestore } from \"../api/firebase\";\n\nconst updatePoll = async ({ pollUid, userId, selectedOption }) => {\n    const userDoc = doc(firestore, \"users\", userId);\n    const pollDoc = doc(firestore, \"polls\", pollUid);\n    const params = {\n        answeredBy: arrayUnion(userDoc),\n    };\n    if (selectedOption)\n        params[`options.${selectedOption}.chosenBy`] = arrayUnion(userDoc);\n    const result = updateDoc(pollDoc, params, { merge: true });\n\n    return result;\n};\n\nexport const useUpdatePoll = () => {\n    const client = useQueryClient();\n    return useMutation((data) => updatePoll(data), {\n        retry: false,\n        onSuccess: () => {\n            client.invalidateQueries(\"poll\");\n        },\n    });\n};\n","import { useQuery } from \"react-query\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { firestore } from \"../api/firebase\";\n\nconst fetchPoll = (uid) => async () => {\n    const result = await getDoc(doc(firestore, \"polls\", uid));\n    return result.data();\n};\nexport const usePoll = (uid) => {\n    return useQuery(\"poll\", fetchPoll(uid), {\n        retry: false,\n        refetchOnWindowFocus: true,\n        refetchInterval: 10000,\n    });\n};\n","import styles from \"./style/poll-password.module.scss\";\n\nconst PollPassword = ({ passInput }) => {\n    return (\n        <div className=\"content center\">\n            <h1>🐓 POLLO</h1>\n\n            <input\n                className={\"formInput \" + styles.input}\n                type=\"text\"\n                placeholder=\"Enter the Poll's Password\"\n                name=\"pollPasswordInput\"\n                onInput={(event) => passInput(event.target.value)}\n            />\n        </div>\n    );\n};\n\nexport default PollPassword;\n","import styles from \"./style/poll-fill.module.scss\";\n\nconst OptionRadio = ({ onCheck, checked, children }) => {\n    return (\n        <div className={styles.optionContainer}>\n            <div\n                onClick={onCheck}\n                className={checked ? styles.activeCheckbox : styles.optionCheckbox}\n            ></div>\n            <div className={styles.optionText}>{children}</div>\n        </div>\n    );\n};\n\nexport default OptionRadio;\n","import { useState, useEffect } from \"react\";\nimport { useParams, useHistory, Redirect } from \"react-router-dom\";\nimport { useUpdatePoll } from \"../../hooks/useUpdatePoll\";\nimport { usePoll } from \"../../hooks/usePoll\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./style/poll-fill.module.scss\";\n\nimport Loader from \"../misc/loader\";\nimport PollPassword from \"./poll-password\";\nimport OptionRadio from \"./option-radio\";\n\nconst PollFill = () => {\n    const [passCorrect, setPassCorrect] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n    const { id: pollUid } = useParams();\n\n    const history = useHistory();\n    const { data: poll, isLoading: pollLoading } = usePoll(pollUid);\n    const user = useSelector((state) => state.user.userData);\n    const { mutate, isSuccess, isLoading: mutationRunning } = useUpdatePoll();\n\n    useEffect(() => {\n        if (!isSuccess) return;\n        history.push(`/${pollUid}/answers`);\n        // eslint-disable-next-line\n    }, [isSuccess]);\n\n    const handleAnswer = (noAns = false) => {\n        mutate({\n            userId: user.uid,\n            selectedOption: noAns ? null : selectedOption,\n            pollUid: pollUid,\n        });\n    };\n    const alreadyAnswered = () =>\n        poll.answeredBy?.length &&\n        poll.answeredBy.map((ans) => ans.id).includes(user.uid);\n\n    if (pollLoading || !user)\n        return (\n            <div className=\"content center\">\n                <Loader />\n            </div>\n        );\n    if (!poll) return <Redirect to=\"/\" />;\n    if (alreadyAnswered()) return <Redirect to={`${pollUid}/answers`} />;\n\n    if (poll.password && !passCorrect)\n        return (\n            <PollPassword passInput={(val) => setPassCorrect(val === poll.password)} />\n        );\n    return (\n        <div className=\"content\">\n            <div className={styles.form}>\n                <h1 className=\"header-text\">{poll.question}</h1>\n                <div className={styles.optionsContainer}>\n                    {Object.keys(poll.options)\n                        .sort()\n                        .map((option) => (\n                            <OptionRadio\n                                onCheck={() => setSelectedOption(option)}\n                                key={option}\n                                checked={selectedOption === option}\n                            >\n                                {option}\n                            </OptionRadio>\n                        ))}\n                </div>\n            </div>\n            <div style={{ alignSelf: \"flex-end\" }}>\n                <button\n                    onClick={() => handleAnswer(false)}\n                    disabled={!selectedOption}\n                    className={`button submit ${!selectedOption ? \"disabled\" : \"\"}`}\n                >\n                    {mutationRunning ? <Loader small /> : \"ANSWER\"}\n                </button>\n                <div onClick={() => handleAnswer(true)} className={styles.noAnswer}>\n                    Just show the answers\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default PollFill;\n","import styles from \"./user-photo.module.scss\";\nimport { getDoc } from \"firebase/firestore\";\nimport { useEffect, useState } from \"react\";\n\nconst FACES = [\n    \"👶🏻\",\n    \"👧🏼\",\n    \"🧒🏽\",\n    \"👦🏾\",\n    \"👩🏽\",\n    \"🧑\",\n    \"👨🏻\",\n    \"👩🏽‍🦱\",\n    \"🧑🏾‍🦱\",\n    \"👨🏼‍🦱\",\n    \"👩🏻‍🦰\",\n    \"🧑🏽‍🦰\",\n    \"👨🏼‍🦰\",\n    \"👱🏻‍♀️\",\n    \"👱🏼\",\n    \"👱🏽‍♂️\",\n    \"👩🏽‍🦳\",\n    \"🧑🏻‍🦳\",\n    \"👨🏿‍🦳\",\n    \"👩🏽‍🦲\",\n    \"🧑🏻‍🦲\",\n    \"👨🏾‍🦲\",\n    \"🧔🏻\",\n    \"👵🏼\",\n    \"🧓🏾\",\n    \"👴🏿\",\n    \"👲🏿\",\n    \"👳🏼‍♀️\",\n    \"👳🏽\",\n    \"👳🏾‍♂️\",\n];\n\nconst UserPhoto = ({ user }) => {\n    const [userData, setUserData] = useState(null);\n    const [index, setIndex] = useState(0);\n\n    useEffect(() => {\n        setIndex(Math.floor(Math.random() * (FACES.length - 1)));\n\n        try {\n            getDoc(user).then((doc) => {\n                setUserData(doc.data());\n            });\n        } catch {}\n        // eslint-disable-next-line\n    }, []);\n\n    return userData?.photoURL ? (\n        <img\n            className={styles.photo}\n            src={userData.photoURL}\n            alt={userData.displayName}\n            referrerpolicy=\"no-referrer\"\n        ></img>\n    ) : (\n        <div className={styles.photo} alt={userData?.displayName}>\n            {FACES[index]}\n        </div>\n    );\n};\n\nexport default UserPhoto;\n","import styles from \"./style/poll-result.module.scss\";\nimport UserPhoto from \"components/misc/user-photo\";\n\nconst PercentageDisplay = ({ optionText, answers, allAnswerCount }) => {\n    const percentage = (answers.length / allAnswerCount) * 100;\n\n    return (\n        <div className={styles.percentageContainer}>\n            <small>{optionText}</small>\n            <div>\n                <div className={styles.percentageBackground}>\n                    <div\n                        className={styles.percentage}\n                        style={{ width: `${percentage}%` }}\n                    ></div>\n                </div>\n                {answers.map((user) => (\n                    <UserPhoto key={user} user={user}></UserPhoto>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default PercentageDisplay;\n","import { useState, useEffect } from \"react\";\nimport styles from \"./style/poll-result.module.scss\";\nimport { useParams } from \"react-router-dom\";\nimport { usePoll } from \"../../hooks/usePoll\";\nimport Loader from \"../misc/loader\";\nimport PercentageDisplay from \"./percentage-display\";\n\nconst PollResult = () => {\n    const { id: pollUid } = useParams();\n    const { data: poll, isLoading: pollLoading } = usePoll(pollUid);\n    const [allAnswers, setAllAnswers] = useState([]);\n\n    useEffect(() => {\n        if (!poll) return;\n        setAllAnswers(\n            Object.keys(poll.options)\n                .map((key) => {\n                    return poll.options[key].chosenBy;\n                })\n                .flat()\n        );\n    }, [poll]);\n\n    if (pollLoading)\n        return (\n            <div className=\"content center\">\n                <Loader />\n            </div>\n        );\n    return (\n        <div className=\"content\">\n            <h1 className={styles.title}>{poll.question}</h1>\n            {!allAnswers.length && (\n                <>\n                    <h2>No Answers yet.</h2>\n                    <h3>options:</h3>\n                </>\n            )}\n            {Object.keys(poll.options)\n                .sort()\n                .map((key) =>\n                    allAnswers.length ? (\n                        <PercentageDisplay\n                            key={key}\n                            optionText={key}\n                            answers={poll.options[key].chosenBy}\n                            allAnswerCount={allAnswers.length}\n                        />\n                    ) : (\n                        <div key={key}>{key}</div>\n                    )\n                )}\n        </div>\n    );\n};\n\nexport default PollResult;\n","const NotFound = () => {\n    return <h1>Uh, oh, there's nothing here :(</h1>;\n};\n\nexport default NotFound;\n","import { Switch, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { setUser } from \"../redux/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Layout from \"./layout/layout\";\nimport Login from \"./login\";\nimport PollConfig from \"./poll-config/poll-config\";\nimport PollList from \"./poll-list/poll-list\";\nimport PollFill from \"./poll-display/poll-fill\";\nimport PollResults from \"./poll-results/poll-results\";\nimport NotFound from \"./misc/not-found\";\n\nconst Routes = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const { pathname } = useLocation();\n\n    const user = useSelector((state) => state.user.userData);\n    useEffect(() => {\n        if (user || pathname === \"/login\") return;\n        const userJSON = localStorage.getItem(\"user\");\n        if (userJSON) {\n            dispatch(setUser(JSON.parse(userJSON)));\n        } else {\n            history.push(`/login?from=${pathname}`);\n        }\n        // eslint-disable-next-line\n    }, [dispatch, user, history]);\n\n    return (\n        <Layout user={user}>\n            <Switch>\n                <Route path={\"/login\"} exact strict component={Login} />\n                <Route path=\"/new\" exact strict component={PollConfig} />\n                <Route path={\"/:id\"} exact strict component={PollFill} />\n                <Route path={\"/:id/answers\"} exact strict component={PollResults} />\n                <Route path={\"/\"} exact strict component={PollList} />\n                <Route component={NotFound} />\n            </Switch>\n        </Layout>\n    );\n};\n\nexport default Routes;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Routes from \"./components/routes\";\n\nfunction App() {\n    return (\n        <>\n            <BrowserRouter>\n                <Routes />\n            </BrowserRouter>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport UserReducer from \"./userSlice\";\nimport InfoReducer from \"./infoSlice\";\n\nconst store = configureStore({\n    reducer: {\n        user: UserReducer,\n        info: InfoReducer,\n    },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport reduxStore from \"./redux/store\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst client = new QueryClient();\n\nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <React.StrictMode>\n            <ReduxProvider store={reduxStore}>\n                <App />\n            </ReduxProvider>\n        </React.StrictMode>\n        <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__2-8iH\",\"circle\":\"loader_circle__28mrd\",\"move\":\"loader_move__3wDno\",\"grow\":\"loader_grow__FCl2k\",\"smallContainer\":\"loader_smallContainer__qTSBQ\",\"smallCircle\":\"loader_smallCircle__iGd3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"poll-fill_form__rIk7W\",\"optionContainer\":\"poll-fill_optionContainer__NpnwS\",\"optionText\":\"poll-fill_optionText__1W1le\",\"optionCheckbox\":\"poll-fill_optionCheckbox__hZUqk\",\"activeCheckbox\":\"poll-fill_activeCheckbox__3r0Lb\",\"noAnswer\":\"poll-fill_noAnswer__3jRE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__7c2fR\",\"logo\":\"header_logo__3imUH\",\"headerItems\":\"header_headerItems__2YgLj\",\"link\":\"header_link__2al1a\",\"infoBar\":\"header_infoBar__drghq\",\"close\":\"header_close__Ri92_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"poll-result_title__3cBbN\",\"percentageContainer\":\"poll-result_percentageContainer__3_bE5\",\"percentageBackground\":\"poll-result_percentageBackground__39BqN\",\"percentage\":\"poll-result_percentage__1ql_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"poll-list_listItem__1I4Yb\",\"divider\":\"poll-list_divider__4I0f6\",\"link\":\"poll-list_link__fEYvO\",\"flex\":\"poll-list_flex__3l9G8\",\"buttonAlign\":\"poll-list_buttonAlign__1bJDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerChildren\":\"main-container_centerChildren__FwBZd\",\"mainContent\":\"main-container_mainContent__2ClgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lakat\":\"poll-config_lakat__2bQWJ\",\"form\":\"poll-config_form__2W1Vg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"user-photo_photo__1-fs3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"poll-password_input__3Cbdi\"};"],"sourceRoot":""}